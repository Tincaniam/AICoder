import React, { useState } from 'react';


const Jobs = () => {
    const [jobs, setJobs] = useState([]);
    const [formData, setFormData] = useState({
        jobTitle: '',
        company: '',
        jobLocation: '',
        jobDescription: ''
    });

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        // Create a new job object without the _id as it should be generated by the backend
        const newJob = {
            title: formData.jobTitle,
            company: formData.company,
            location: formData.jobLocation,
            description: formData.jobDescription
        };

        try {
            const response = await fetch('http://localhost:5000/api/jobs', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(newJob)
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const result = await response.json();

            // Add the new job returned by the server to the current list of jobs
            setJobs([...jobs, result]);

            // Reset the form data to the initial state
            setFormData({ jobTitle: '', company: '', jobLocation: '', jobDescription: '' });

        } catch (error) {
            console.error('There was a problem posting the new job:', error);
        }
    };

    return (
        <div className="form-container">
            <h2>Add Previous Job/Internship</h2>
            <form onSubmit={handleSubmit}>
                <input
                    type="text"
                    name="jobTitle"
                    placeholder="Job Title"
                    value={formData.jobTitle}
                    onChange={handleChange}
                    required
                />
                <input
                    type="text"
                    name="company"
                    placeholder="Company"
                    value={formData.company}
                    onChange={handleChange}
                    required
                />
                <input
                    type="text"
                    name="jobLocation"
                    placeholder="Location"
                    value={formData.jobLocation}
                    onChange={handleChange}
                    required
                />
                <textarea
                    name="jobDescription"
                    placeholder="Job Description"
                    value={formData.jobDescription}
                    onChange={handleChange}
                    required
                />
                <button type="submit">Add Job</button>
            </form>
            <div>
                {jobs.length > 0 ? (
                    <table>
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Company</th>
                                <th>Location</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            {jobs.map((job) => (
                                <tr key={job._id.$oid}>
                                    <td>{job.title}</td>
                                    <td>{job.company}</td>
                                    <td>{job.location}</td>
                                    <td>{job.description}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                ) : (
                    <p>No jobs/internships added yet.</p>
                )}
            </div>
        </div>
    );
}

export default Jobs;
